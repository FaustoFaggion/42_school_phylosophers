# 42SP - Philosophers

This project was create to teach the basics of threading a process.

## What is a Thread?

A thread is an execution context, which is all the information a CPU needs to execute a stream of instructions. A process can contain multiple threads.

## Thread X Process

### Threads

- Run inside a process.
- Share the same process:
  - Share the same memory space.
  - Share the variables of the process. All threads can acess the same variables.
    - As the varibles are comom, you have to make sure when a thread is changing a variable the other threads can't acess the variable.
- Share the same file handlers.
- Share the same system resources that was allocate for the processs that they are runnig in..
- We can't control when the thread will run. The OS will manage the threads throught a tool called scheduler.
- But like process, a thread has its own program counter, register set, and stack space.

### Process

- Run independily from others process
  - Have independent memory space
  - When create a process, the parent variables are duplicated for the child process.
  - Changes in variables on the parent process don't afect the variables in the child process.
- File handlers are duplicated.

## Race Condition

## Waht is a Race Condition?

It just can happen if there is a multi core processor.

## Paralelism

### Thread execution:

- Read the values in your own register.
- Apply a function required using the values saved in his register.
-  Apply this values to the variables in memory.

### Links

README:

[Tutorial README](https://www.youtube.com/watch?v=eJojC3lSkwg)

Makefile:

[Tutorial Makefile](https://www.youtube.com/watch?v=GExnnTaBELk)

Threads:

[Waht is a Thread](https://www.geeksforgeeks.org/thread-in-operating-system/)

[Compiling threads](https://www.youtube.com/watch?v=j9csJohayPU)

[Code Valt - threads](https://www.youtube.com/playlist?list=PLfqABt5AS4FmuQf70psXrsMLEDQXNkLq2)