# 42SP - Philosophers

## Thread X Process

### Threads

- Run inside a process
- Share the same process so:
  - have the same memory space
  - The variables of the process are comom for all threads. All threads can acess the same variables.
  - As the varibles are comom you have to make sure when a thread is changing a variable the other threads can't acess the variable.
- Share the same file handlers.
- All the system resources are shared among the threads.
- The system with thread will run. We can't control that.
### Process

- Run independily from others process
  - Have independent memory space
  - When create a process, the parent variables are duplicated for the child process.
  - Changes in variables on the parent process don't afect the variables in the child process.
- File handlers are duplicated.

## Race Condition

## Waht is a Race Condition?

It just can happen if there is a multi core processor.

### Thread execution:

- Read the value of them in your own register.
- Apply a function required using the values saved in his register.
-  Apply this values to the variables in memory.

### Links

README:

[Tutorial README](https://www.youtube.com/watch?v=eJojC3lSkwg)

Makefile:

[Tutorial Makefile](https://www.youtube.com/watch?v=GExnnTaBELk)

Threads:

[Compiling threads] (https://www.youtube.com/watch?v=j9csJohayPU)

[Code Valt - threads](https://www.youtube.com/playlist?list=PLfqABt5AS4FmuQf70psXrsMLEDQXNkLq2)